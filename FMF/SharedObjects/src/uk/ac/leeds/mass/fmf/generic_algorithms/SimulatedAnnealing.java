/*
 *   The Flexible Modelling Framework is a Social Science application for 
 *   synthesising individual level populations
 *   Copyright (C) 2013  Kirk Harland
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *   Contact email: k.harland@leeds.ac.uk
 */

package uk.ac.leeds.mass.fmf.generic_algorithms;

/**
 *
 * @author geo8kh
 */
public class SimulatedAnnealing extends javax.swing.JPanel {



    /** Creates new form SimulatedAnnealing */
    public SimulatedAnnealing(){
        initComponents();
    }




    public void enableSliders(boolean enable){
        this.getStepsSlider().setEnabled(enable);
        this.getImprovementAttemptSlider().setEnabled(enable);
        this.getImprovementSlider().setEnabled(enable);
        this.getFactorSlider().setEnabled(enable);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        stepsSlider = new javax.swing.JSlider();
        stepsValue = new javax.swing.JLabel();
        stepsLabel = new javax.swing.JLabel();
        improvementAttemptSlider = new javax.swing.JSlider();
        improvementAttemptLabel = new javax.swing.JLabel();
        improvementAttemptValue = new javax.swing.JLabel();
        improvementSlider = new javax.swing.JSlider();
        improvementLabel = new javax.swing.JLabel();
        improvementValue = new javax.swing.JLabel();
        factorSlider = new javax.swing.JSlider();
        factorLabel = new javax.swing.JLabel();
        factorValue = new javax.swing.JLabel();

        stepsSlider.setMajorTickSpacing(20);
        stepsSlider.setMaximum(200);
        stepsSlider.setMinorTickSpacing(1);
        stepsSlider.setSnapToTicks(true);
        stepsSlider.setToolTipText("set number 'cooling' steps for the simulated annealing algorithm ");
        stepsSlider.setValue(100);
        stepsSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                stepsSliderMouseDragged(evt);
            }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_ONCE, stepsSlider, org.jdesktop.beansbinding.ELProperty.create("${model.value}"), stepsValue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        stepsLabel.setText("set the maximum number of steps in the optimisation algorithm");

        improvementAttemptSlider.setMajorTickSpacing(20);
        improvementAttemptSlider.setMaximum(200);
        improvementAttemptSlider.setMinorTickSpacing(1);
        improvementAttemptSlider.setSnapToTicks(true);
        improvementAttemptSlider.setToolTipText("set the maximum number of attempts that will be made to improve the optimisation before continuing");
        improvementAttemptSlider.setValue(100);
        improvementAttemptSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                improvementAttemptSliderMouseDragged(evt);
            }
        });

        improvementAttemptLabel.setText("set the maximum number of improvement attempts before continuing");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_ONCE, improvementAttemptSlider, org.jdesktop.beansbinding.ELProperty.create("${model.value}"), improvementAttemptValue, org.jdesktop.beansbinding.BeanProperty.create("text"), "");
        bindingGroup.addBinding(binding);

        improvementSlider.setMajorTickSpacing(10);
        improvementSlider.setMaximum(50);
        improvementSlider.setMinorTickSpacing(1);
        improvementSlider.setSnapToTicks(true);
        improvementSlider.setToolTipText("set the number of successful improvements to be made before moving continuing");
        improvementSlider.setValue(10);
        improvementSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                improvementSliderMouseDragged(evt);
            }
        });

        improvementLabel.setText("set the number of improvements to the optimisation before continuing");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_ONCE, improvementSlider, org.jdesktop.beansbinding.ELProperty.create("${model.value}"), improvementValue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        factorSlider.setMajorTickSpacing(10);
        factorSlider.setMinimum(1);
        factorSlider.setMinorTickSpacing(1);
        factorSlider.setSnapToTicks(true);
        factorSlider.setToolTipText("set the multiplication factor to be used to reduce the annealing schedule (how likely a non-improving change is to be accepted) each iteration.");
        factorSlider.setValue(90);
        factorSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                factorSliderMouseDragged(evt);
            }
        });

        factorLabel.setText("set the annealing reduction factor (recomended 0.9)");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_ONCE, factorSlider, org.jdesktop.beansbinding.ELProperty.create("${model.value/100}"), factorValue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(stepsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(stepsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(stepsValue))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(improvementAttemptSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(improvementAttemptValue))
                        .addComponent(improvementAttemptLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                        .addComponent(improvementLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(factorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(factorValue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(improvementSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(improvementValue))
                    .addComponent(factorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stepsLabel)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(stepsValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stepsSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(improvementAttemptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(improvementAttemptValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(improvementAttemptSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(improvementLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(improvementSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(improvementValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(factorLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(factorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(factorValue, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void stepsSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stepsSliderMouseDragged
        this.stepsValue.setText( Integer.toString( getStepsSlider().getModel().getValue() ) );
    }//GEN-LAST:event_stepsSliderMouseDragged

    private void improvementAttemptSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_improvementAttemptSliderMouseDragged
        this.improvementAttemptValue.setText( Integer.toString( getImprovementAttemptSlider().getModel().getValue() ) );
    }//GEN-LAST:event_improvementAttemptSliderMouseDragged

    private void improvementSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_improvementSliderMouseDragged
        this.improvementValue.setText( Integer.toString( getImprovementSlider().getModel().getValue() ) );
    }//GEN-LAST:event_improvementSliderMouseDragged

    private void factorSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_factorSliderMouseDragged
        this.factorValue.setText( Double.toString( (double)getFactorSlider().getModel().getValue()/100 ) );
    }//GEN-LAST:event_factorSliderMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel factorLabel;
    private javax.swing.JSlider factorSlider;
    private javax.swing.JLabel factorValue;
    private javax.swing.JLabel improvementAttemptLabel;
    private javax.swing.JSlider improvementAttemptSlider;
    private javax.swing.JLabel improvementAttemptValue;
    private javax.swing.JLabel improvementLabel;
    private javax.swing.JSlider improvementSlider;
    private javax.swing.JLabel improvementValue;
    private javax.swing.JLabel stepsLabel;
    private javax.swing.JSlider stepsSlider;
    private javax.swing.JLabel stepsValue;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the factorSlider
     */
    public javax.swing.JSlider getFactorSlider() {
        return factorSlider;
    }

    /**
     * @return the improvementAttemptSlider
     */
    public javax.swing.JSlider getImprovementAttemptSlider() {
        return improvementAttemptSlider;
    }

    /**
     * @return the improvementSlider
     */
    public javax.swing.JSlider getImprovementSlider() {
        return improvementSlider;
    }

    /**
     * @return the stepsSlider
     */
    public javax.swing.JSlider getStepsSlider() {
        return stepsSlider;
    }

    public synchronized SimulatedAnnealingProcess getSAProcess(){
        SimulatedAnnealingProcess sa = new SimulatedAnnealingProcess(
                stepsSlider.getValue(),
                improvementAttemptSlider.getValue(),
                improvementSlider.getValue(),
                factorSlider.getValue()
                );

        return sa;
    }

}
